AWSTemplateFormatVersion: '2010-09-09'
Description: Create VPC For SAP Applications
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Availability Zone Configuration
      Parameters:
      - AvailabilityZones
    - Label:
        default: Network Configuration
      Parameters:
      - VPCCIDR
      - PublicSubnet1CIDR
      - PublicSubnet2CIDR
      - PrivateSubnet1CIDR
      - PrivateSubnet2CIDR
    ParameterLabels:
      AvailabilityZones:
        default: Availability Zones
      PrivateSubnet1CIDR:
        default: Private subnet 1 CIDR
      PrivateSubnet2CIDR:
        default: Private subnet 2 CIDR
      PublicSubnet1CIDR:
        default: Public subnet 1 CIDR
      PublicSubnet2CIDR:
        default: Public subnet 2 CIDR
      VPCCIDR:
        default: VPC CIDR
Conditions:
  NVirginiaRegionCondition:
    Fn::Equals:
    - Ref: AWS::Region
    - us-east-1
Parameters:
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC. Note:
      The logical order is preserved.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  PrivateSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.1.0/24
    Description: CIDR block for private subnet 1 located in Availability Zone 1
    Type: String
  PrivateSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.2.0/24
    Description: CIDR block for private subnet 2 located in Availability Zone 2
    Type: String
  PublicSubnet1CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.3.0/24
    Description: CIDR block for the public DMZ subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2CIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.4.0/24
    Description: CIDR block for the public DMZ subnet 2 located in Availability Zone 2
    Type: String
  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
Resources:
  DHCPOptions:
    Type: AWS::EC2::DHCPOptions
    Properties:
      DomainName:
        Fn::If:
        - NVirginiaRegionCondition
        - ec2.internal
        - Fn::Join:
          - ''
          - - Ref: AWS::Region
            - .compute.internal
      DomainNameServers:
      - AmazonProvidedDNS
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock:
        Ref: VPCCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
      - Key: Name
        Value:
          Ref: AWS::StackName
  VPCDHCPOptionsAssociation:
    Type: AWS::EC2::VPCDHCPOptionsAssociation
    Properties:
      VpcId:
        Ref: VPC
      DhcpOptionsId:
        Ref: DHCPOptions
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value:
          Ref: AWS::StackName
      - Key: Network
        Value: Public
  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId:
        Ref: VPC
      InternetGatewayId:
        Ref: InternetGateway
  PrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet1CIDR
      AvailabilityZone: !Select [ 0, Ref: AvailabilityZones ]
      Tags:
      - Key: Name
        Value: Private subnet 1
      - Key: Network
        Value: Private
  PrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PrivateSubnet2CIDR
      AvailabilityZone: !Select [ 1, Ref: AvailabilityZones ]
      Tags:
      - Key: Name
        Value: Private subnet 2
      - Key: Network
        Value: Private
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnet1CIDR
      AvailabilityZone: !Select [ 0, Ref: AvailabilityZones ]
      Tags:
      - Key: Name
        Value: Public subnet 1
      - Key: Network
        Value: Public
      MapPublicIpOnLaunch: true
  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: VPC
      CidrBlock:
        Ref: PublicSubnet2CIDR
      AvailabilityZone: !Select [ 1, Ref: AvailabilityZones ]
      Tags:
      - Key: Name
        Value: Public subnet 2
      - Key: Network
        Value: Public
      MapPublicIpOnLaunch: true
  NATEIP:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
  NATGateway:
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - NATEIP
        - AllocationId
      SubnetId:
        Ref: PublicSubnet1
  PrivateSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Private subnet route table
      - Key: Network
        Value: Private
  PublicSubnetRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: VPC
      Tags:
      - Key: Name
        Value: Public subnet route table
      - Key: Network
        Value: Public
  AddRouteToIGW:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: InternetGateway
      RouteTableId:
        Ref: PublicSubnetRouteTable
  PrivateSubnetRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: PrivateSubnetRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: NATGateway
  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet1
      RouteTableId:
        Ref: PrivateSubnetRouteTable
  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PrivateSubnet2
      RouteTableId:
        Ref: PrivateSubnetRouteTable
  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet1
      RouteTableId:
        Ref: PublicSubnetRouteTable
  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId:
        Ref: PublicSubnet2
      RouteTableId:
        Ref: PublicSubnetRouteTable
Outputs:
  PrivateSubnet1CIDR:
    Description: Private subnet 1 CIDR in Availability Zone 1
    Value:
      Ref: PrivateSubnet1CIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrivateSubnet1CIDR
  PrivateSubnet1ID:
    Description: Private subnet 1 ID in Availability Zone 1
    Value:
      Ref: PrivateSubnet1
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrivateSubnet1ID
  PrivateSubnet2CIDR:
    Description: Private subnet 2 CIDR in Availability Zone 2
    Value:
      Ref: PrivateSubnet2CIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrivateSubnet2CIDR
  PrivateSubnet2ID:
    Description: Private subnet 2 ID in Availability Zone 2
    Value:
      Ref: PrivateSubnet2
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PrivateSubnet2ID
  PublicSubnet1CIDR:
    Description: Public subnet 1 CIDR in Availability Zone 1
    Value:
      Ref: PublicSubnet1CIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PublicSubnet1CIDR
  PublicSubnet1ID:
    Description: Public subnet 1 ID in Availability Zone 1
    Value:
      Ref: PublicSubnet1
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PublicSubnet1ID
  PublicSubnet2CIDR:
    Description: Public subnet 2 CIDR in Availability Zone 2
    Value:
      Ref: PublicSubnet2CIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PublicSubnet2CIDR
  PublicSubnet2ID:
    Description: Public subnet 2 ID in Availability Zone 2
    Value:
      Ref: PublicSubnet2
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-PublicSubnet2ID
  VPCCIDR:
    Value:
      Ref: VPCCIDR
    Description: VPC CIDR
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-VPCCIDR
  VPCID:
    Value:
      Ref: VPC
    Description: VPC ID
    Export:
      Name:
        Fn::Sub: ${AWS::StackName}-VPCID
