AWSTemplateFormatVersion: 2010-09-09
Description: High Availability Configuration
Parameters:
  VPCID:
     Type: 'AWS::EC2::VPC::Id'
     Description: VPC ID
  PrimarySubnetId:
     Description : Private Subnet ID of Primary Instance
     Type: 'AWS::EC2::Subnet::Id'
  SecondarySubnetId:
     Description : Private Subnet ID of Secondary Instance
     Type: 'AWS::EC2::Subnet::Id'
  PublicSubnet1CIDR:
     ConstraintDescription :  CIDR block parameter must be in the form x.x.x.x/16-28
     Default : ''
     Description : CIDR block for the public DMZ subnet 1 located in Availability Zone 1
     Type :  String
  HANAPrimaryIPAddress:
    Type: String
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
    Description: IP address of HANA Primary Instance
  HANASecondaryIPAddress:
    Type: String
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
    Description: IP address of HANA Secondary Instance
  HANAPrimaryInstanceId:
     Description : Instance ID of Primary Instance
     Type: String
  HANASecondaryInstanceId:
     Description : Instance ID of Secondary Instance
     Type: String
  HANAPrimaryInstanceRole:
     Description : Role Name for HANA Primary Instance
     Type: String
  HANASecondaryInstanceRole:
     Description : Role Name for HANA Primary Instance
     Type: String
  HANAPrimarySecurityGroup:
     Description : Security Group ID for HANA Primary Instance
     Type: String
  HANASecondarySecurityGroup:
     Description : Security Group ID for HANA Secondary Instance
     Type: String
  HANAHostnamePrimary:
     Description : Hostname for HANA Primary Instance
     Type: String
  HANAHostnameSecondary:
     Description : Hostname for HANA Secondary Instance
     Type: String
  MyS3BucketPreFix:
    Description: S3 Bucket prefix
    Type: String
  MyS3Bucket:
    Description: S3 Bucket to store temp config objects (e.g. s3://myhanabucket/temp/).
    Type: String
  HANAMasterPass:
    Type: String
    Description: SAP HANA password to use during installation.
    NoEcho: 'true'
    MinLength: '8'
    AllowedPattern: '^(?=.*?[a-z])(?=.*?[A-Z])(?=.*[0-9]).*'
    ConstraintDescription: This must be at least 8 characters, including uppercase, lowercase, and numeric values.
  PrimaryHANASite:
    Description: Primary HANA Site Name for HSR
    Type: String
  SecondaryHANASite:
    Description: Secondary HANA Site Name for HSR
    Type: String
  VirtualIPAddress:
    Description: Virtual/Overlay IP Address
    Type: String
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})'
  PaceMakerTag:
    Description: Pacemaker Tag name
    Type: String
  DomainName:
    Type: String
    Description: Name to use for fully qualified domain names.
  SID:
    Type: String
    Description: SAP HANA system ID for installation and setup.
    AllowedPattern: '([A-Z]{1}[0-9A-Z]{2})'
    ConstraintDescription: This value must consist of 3 characters.
  SAPInstanceNum:
    Type: String
    Description: SAP HANA instance number.
    AllowedPattern: '([0-8]{1}[0-9]{1}|[9]{1}[0-7]{1})'
    ConstraintDescription: Instance number must be between 00 and 97.
  MyOS:
     Description : Operating System for HANA instances
     Type: String

Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: VPC infrastructure details
        Description:
          default: ''
        Parameters:
          - PrimarySubnetId
          - SecondarySubnetId
          - HANAPrimaryInstanceId
          - HANASecondaryInstanceId
          - HANAPrimaryIPAddress
          - HANASecondaryIPAddress
          - HANAHostnamePrimary
          - HANAHostnameSecondary
          - PublicSubnet1CIDR
          - VPCID
          - MyOS
      - Label:
          default: HANA Instance Details
        Description:
          default: ''
        Parameters:
          - PrimarySiteName
          - SecondarySiteName
          - SAPInstanceNum
          - DomainName
          - SID
      - Label:
          default: S3 Buckets
        Description:
          default: ''
        Parameters:
          - MyS3Bucket
          - MyS3BucketPreFix

    ParameterLabels:
      VPCID:
        default: VPC ID
      PrimarySubnetId:
        default: SubnetID Primary HANA
      SecondarySubnetId:
        default: SubnetID Secondary HANA
      PublicSubnet1CIDR:
        default: CIDR for public subnet
      DomainName:
        default: Domain Name
      HANAHostnameSecondary:
        default: Secondary HANA HostName
      HANAHostnamePrimary:
        default: Primary HANA HostName
      HANAPrimaryIPAddress:
        default: Primary HANA IP Address
      HANASecondaryIPAddress:
        default: Secondary HANA IP Address
      HANAPrimaryInstanceId:
        default: Primary HANA Instance ID
      HANASecondaryInstanceId:
        default: Secondary HANA Instance ID
      HANAPrimarySecurityGroup:
        default: Primary HANA Security GroupId
      HANASecondarySecurityGroup:
        default: Secondary HANA Security GroupId
      HANAPrimaryInstanceRole:
        default: Primary HANA IAM Role Name
      HANASecondaryInstanceRole:
        default: Secondary HANA IAM Role Name
      MyS3Bucket:
        default: S3 Bucket for temp objects
      SID:
        default: SAP HANA system ID
      SAPInstanceNum:
        default: SAP HANA instance number
      HANAMasterPass:
        default: SAP HANA password
      PrimaryHANASite:
        default: HANA Primary Site Name (3 Char)
      SecondaryHANASite:
        default: HANA Secondary Site Name (3 Char)
      VirtualIPAddress:
        default: Overlay IP Address
      PaceMakerTag:
        default: Pacemaker Tag Name
      MyOS:
        default: Operating system for HANA instances

Resources:
  UpdateInstanceIAMRoles:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: QuickStartHAPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - 'ec2:DescribeInstances'
              - 'ec2:DescribeInstanceAttribute'
              - 'ec2:DescribeTags'
              - 'ec2:DescribeVolumes'
              - 'ec2:CreateRoute'
              - 'ec2:DeleteRoute'
              - 'ec2:DescribeRouteTables'
              - 'ec2:ReplaceRoute'
              - 'cloudwatch:GetMetricStatistics'
            Resource: '*'
          - Effect: Allow
            Action:
              - 'ec2:ModifyInstanceAttribute'
              - 'ec2:RebootInstances'
              - 'ec2:StartInstances'
              - 'ec2:StopInstances'
            Resource:
              - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/${HANAPrimaryInstanceId}"
              - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/${HANASecondaryInstanceId}"
      Roles:
        - !Ref HANAPrimaryInstanceRole
        - !Ref HANASecondaryInstanceRole

  UpdateSecurityGroupPrimaryUDP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref HANAPrimarySecurityGroup
      Description: HA Cluster health check UDP port from Secondary HANA
      IpProtocol: udp
      FromPort: '5405'
      ToPort: '5405'
      CidrIp: !Join
        - ''
        - - !Ref HANASecondaryIPAddress
          - /32

  UpdateSecurityGroupPrimaryICMP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref HANAPrimarySecurityGroup
      Description: ICMP Port from Secondary HANA
      IpProtocol: icmp
      FromPort: '-1'
      ToPort: '-1'
      CidrIp: !Join
        - ''
        - - !Ref HANASecondaryIPAddress
          - /32

  UpdateSecurityGroupPrimaryHAWK:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref HANAPrimarySecurityGroup
      Description: Hawk port from public subnet
      IpProtocol: tcp
      FromPort: '7630'
      ToPort: '7630'
      CidrIp: !Ref PublicSubnet1CIDR


  UpdateSecurityGroupPrimaryTCP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref HANAPrimarySecurityGroup
      Description: All tcp ports from Secondary HANA
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      CidrIp: !Join
        - ''
        - - !Ref HANASecondaryIPAddress
          - /32

  UpdateSecurityGroupSecondaryUDP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref HANASecondarySecurityGroup
      Description: HA Cluster health check UDP port from Primary HANA
      IpProtocol: udp
      FromPort: '5405'
      ToPort: '5405'
      CidrIp: !Join
        - ''
        - - !Ref HANAPrimaryIPAddress
          - /32

  UpdateSecurityGroupSecondaryICMP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref HANASecondarySecurityGroup
      Description: ICMP From Primary HANA
      IpProtocol: icmp
      FromPort: '-1'
      ToPort: '-1'
      CidrIp: !Join
        - ''
        - - !Ref HANAPrimaryIPAddress
          - /32

  UpdateSecurityGroupSecondaryHAWK:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref HANASecondarySecurityGroup
      Description: Hawk port from public subnet
      IpProtocol: tcp
      FromPort: '7630'
      ToPort: '7630'
      CidrIp: !Ref PublicSubnet1CIDR

  UpdateSecurityGroupSecondaryTCP:
    Type: 'AWS::EC2::SecurityGroupIngress'
    Properties:
      GroupId: !Ref HANASecondarySecurityGroup
      Description: All TCP From Primary HANA
      IpProtocol: tcp
      FromPort: '0'
      ToPort: '65535'
      CidrIp: !Join
        - ''
        - - !Ref HANAPrimaryIPAddress
          - /32

  HAConfigLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole
      Path: "/"
      Policies:
        - PolicyName: LambdaHAPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
                - Action:
                    - 'ssm:sendCommand'
                    - 'ssm:GetDocument'
                  Resource:
                    - !Sub "arn:aws:ssm:${AWS::Region}::document/AWS-RunShellScript"
                    - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/${HANAPrimaryInstanceId}"
                    - !Sub "arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:instance/${HANASecondaryInstanceId}"
                  Effect: Allow
                - Action:
                    - 'ec2:CreateTags'
                    - 'ec2:DescribeTags'
                    - 'ec2:DescribeInstanceAttribute'
                    - 'ec2:ModifyInstanceAttribute'
                    - 'ec2:CreateRoute'
                    - 'ec2:DeleteRoute'
                    - 'ec2:DescribeRouteTables'
                    - 'ec2:ReplaceRoute'
                    - 'ssm:ListCommands'
                  Resource: "*"
                  Effect: Allow
                - Action:
                    - 'iam:PutRolePolicy'
                  Resource:
                    - !Sub "arn:aws:iam::${AWS::AccountId}:role/${HANASecondaryInstanceRole}"
                    - !Sub "arn:aws:iam::${AWS::AccountId}:role/${HANAPrimaryInstanceRole}"

                  Effect: Allow

  HAConfigLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      Handler: HAConfig.lambda_handler
      Runtime: python3.6
      Timeout: '300'
      VpcConfig:
        SecurityGroupIds:
           - Ref: HANAPrimarySecurityGroup
           - Ref: HANASecondarySecurityGroup
        SubnetIds:
           - Ref: PrimarySubnetId
           - Ref: SecondarySubnetId
      Role: !GetAtt [ HAConfigLambdaRole, Arn ]
      Code:
        S3Bucket: !Ref MyS3Bucket
        S3Key: !Join ['', [!Ref MyS3BucketPreFix, '/HAConfig.zip']]

  InvokeHAConfigLambdaFunction:
    Type: 'Custom::LambdaCallout'
    DependsOn:
      - HAConfigLambdaFunction
    Properties:
      ServiceToken: !GetAtt
        - HAConfigLambdaFunction
        - Arn
      PrimaryInstanceId: !Ref HANAPrimaryInstanceId
      SecondaryInstanceId: !Ref HANASecondaryInstanceId
      PrimaryHostName: !Ref HANAHostnamePrimary
      SecondaryHostName: !Ref HANAHostnameSecondary
      PaceMakerTag: !Ref PaceMakerTag
      AWSRegion: !Ref 'AWS::Region'
      VirtualIP: !Ref VirtualIPAddress
      PrimaryHANASite: !Ref PrimaryHANASite
      SecondaryHANASite: !Ref SecondaryHANASite
      PrimarySubnetId: !Ref PrimarySubnetId
      SecondarySubnetId: !Ref SecondarySubnetId
      SID: !Ref SID
      VPCID: !Ref VPCID
      HANAMasterPass: !Ref HANAMasterPass
      InstanceNo: !Ref SAPInstanceNum
      HANAPrimaryIPAddress: !Ref HANAPrimaryIPAddress
      HANASecondaryIPAddress: !Ref HANASecondaryIPAddress
      domainName: !Ref DomainName
      TempS3Bucket: !Join [ '',[ 's3://',!Ref MyS3Bucket,'/',!Ref MyS3BucketPreFix,'/']]
      MyOS : !Ref MyOS

Outputs:
  ResultsHAConfig:
    Description: HA Config. Results
    Value: !GetAtt
      - InvokeHAConfigLambdaFunction
      - Status
